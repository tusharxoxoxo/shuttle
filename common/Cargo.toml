[package]
name = "shuttle-common"
version = "0.34.1"
edition.workspace = true
license.workspace = true
repository.workspace = true
description = "Common library for the shuttle platform (https://www.shuttle.rs/)"

[dependencies]
anyhow = { workspace = true }
async-trait = { workspace = true, optional = true }
axum = { workspace = true, optional = true }
bytes = { workspace = true, optional = true }
chrono = { workspace = true }
comfy-table = { version = "6.2.0", optional = true }
crossterm = { workspace = true, optional = true }
headers = { workspace = true, optional = true }
http = { workspace = true, optional = true }
http-body = { version = "0.4.5", optional = true }
http-serde = { version = "1.1.2", optional = true }
hyper = { workspace = true, optional = true }
jsonwebtoken = { workspace = true, optional = true }
once_cell = { workspace = true, optional = true }
opentelemetry = { workspace = true, optional = true }
opentelemetry_sdk = { workspace = true, optional = true }
opentelemetry-http = { workspace = true, optional = true }
opentelemetry-otlp = { workspace = true, optional = true }
opentelemetry-appender-tracing = { workspace = true, optional = true }
pin-project = { workspace = true, optional = true }
rand = { workspace = true, optional = true }
reqwest = { workspace = true, optional = true }
rmp-serde = { workspace = true, optional = true }
# keep locked to not accidentally invalidate someone's project name
rustrict = { version = "=0.7.12", optional = true }
semver = { workspace = true }
serde = { workspace = true, features = ["derive", "std"] }
serde_json = { workspace = true }
sqlx = { workspace = true, optional = true }
strum = { workspace = true, features = ["derive"] }
thiserror = { workspace = true, optional = true }
tokio = { workspace = true, optional = true }
tonic = { workspace = true, optional = true }
tower = { workspace = true, optional = true }
tower-http = { workspace = true, optional = true }
tracing = { workspace = true, features = ["std"], optional = true }
tracing-core = { workspace = true, optional = true }
tracing-opentelemetry = { workspace = true, optional = true }
tracing-subscriber = { workspace = true, optional = true }
ttl_cache = { workspace = true, optional = true }
utoipa = { workspace = true, optional = true }
url = { workspace = true, features = ["serde"] }
uuid = { workspace = true, features = ["v4", "serde"], optional = true }
zeroize = { workspace = true }

[features]
backend = [
    "async-trait",
    "axum/matched-path",
    "axum/json",
    "claims",
    "hyper/client",
    "opentelemetry_sdk",
    "opentelemetry-appender-tracing",
    "opentelemetry-otlp",
    "rustrict", # only ProjectName model uses it
    "thiserror",
    "tokio",
    "tonic",
    "tower-http",
    "tracing-subscriber/env-filter",
    "tracing-subscriber/fmt",
    "tracing-core",
    "ttl_cache",
]
claims = [
    "bytes",
    "chrono/clock",
    "headers",
    "http",
    "http-body",
    "jsonwebtoken",
    "opentelemetry",
    "opentelemetry-http",
    "pin-project",
    "tower",
    "tracing",
    "tracing-opentelemetry",
]
display = ["chrono/clock", "comfy-table", "crossterm"]
openapi = ["utoipa/chrono", "utoipa/uuid"]
models = ["async-trait", "http", "reqwest", "service", "thiserror"]
persist = ["sqlx", "rand"]
service = ["chrono/serde", "display", "tracing", "tracing-subscriber", "uuid"]
tracing = ["dep:tracing"]
wasm = [
    "chrono/clock",
    "http-serde",
    "http",
    "rmp-serde",
    "tracing",
    "tracing-subscriber",
]

[dev-dependencies]
axum = { workspace = true }
base64 = { workspace = true }
hyper = { workspace = true }
proptest = "1.1.0"
ring = { workspace = true }
tokio = { workspace = true, features = ["macros", "rt-multi-thread"] }
tower = { workspace = true, features = ["util"] }
tracing-fluent-assertions = "0.3.0"
tracing-subscriber = { workspace = true }
